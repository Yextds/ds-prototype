---
{
"stream": {
"$id": "navbarListing-ppppp",
"source": "knowledgeGraph",
"destination": "pages",
"filter": {
"entityTypes": [
"ce_mainDotsquaresPrototype"
]
},
"fields": [
"id",
"uid",
"name",
"slug",
"c_mainRelatedNavber.slug",
"c_mainRelatedNavber.name",
"c_mainRelatedNavber.c_dsibHeader",
"c_mainRelatedNavber.c_dsibParagraph",
"c_mainRelatedNavber.c_customSubmenuitem.name",
"c_mainRelatedNavber.c_customSubmenuitem.slug",
"c_mainRelatedNavber.c_customSubmenuitem.c_relatedMenuCategory.name",
"c_mainRelatedNavber.c_customSubmenuitem.c_relatedMenuCategory.slug"
],
"localization": {
"locales": ["en"]
}
},
"urlFormat": "case-studies.html"
}
---


<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <meta http-equiv="X-UA-Compatible" content="ie=edge" />
      <title>Case Studies</title>
      <meta name="description" content="Luc's Fashion Warehouse Home Page" />
      {{>head}} {{!--
      <link href="https://unpkg.com/tailwindcss/dist/tailwind.min.css" rel="stylesheet" />
      --}}
      <!--Replace with your tailwind.css once created-->
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
      <link href="https://fonts.googleapis.com/css?family=Work+Sans:200,400&display=swap" rel="stylesheet" />
   </head>
   <body>
        {{>PrototypeMenu}}

         <!-- Image banner code starts here -->
  <div>

    <section class="mb-40">
      <div class="page-title">
        <div class="centered-container">
            
          <h1>Case Studies</h1>
          <p>See how we work closely with our clients to realise successful projects that deliver results</p>
         
        </div>
      </div>

    </section>
    

  </div>

  <!-- Image banner code ends here -->

    <!-- HTML Code for Entities listing starts here-->

        <div class="entitiesListing  flex-wrap">
             
        </div>

    <!-- HTML code for Entitites listing ends here -->

    <!-- HTML Code for pagination buttons starts here -->

        <div class="contain-pagination"></div>
      </div>
       

    <!-- HTMl Code for pagination buttons ends here -->
  

    <!-- Javascript code starts here -->
        <script type = "text/javascript" >
        var api_key = "b262ae7768eec3bfa53bfca6d48e4000";
        var v = "20211229";
        var api_url = "https://liveapi-sandbox.yext.com/v2/accounts/me/entities?api_key=" + api_key + "&v=" + v;

    /*paginate() function code starts here*/

        function paginate(totalItems, currentPage, pageSize, maxPages) {
            if (currentPage === void 0) {
                currentPage = 1;
            }
            if (pageSize === void 0) {
                pageSize = 10;
            }
            if (maxPages === void 0) {
                maxPages = 10;
            }
            // calculate total pages
            var totalPages = Math.ceil(totalItems / pageSize);
            // ensure current page isn't out of range
            if (currentPage < 1) {
                currentPage = 1;
            } else if (currentPage > totalPages) {
                currentPage = totalPages;
            }
            var startPage, endPage;
            if (totalPages <= maxPages) {
                // total pages less than max so show all pages
                startPage = 1;
                endPage = totalPages;
            } else {
                // total pages more than max so calculate start and end pages
                var maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);
                var maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;
                if (currentPage <= maxPagesBeforeCurrentPage) {
                    // current page near the start
                    startPage = 1;
                    endPage = maxPages;
                } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {
                    // current page near the end
                    startPage = totalPages - maxPages + 1;
                    endPage = totalPages;
                } else {
                    // current page somewhere in the middle
                    startPage = currentPage - maxPagesBeforeCurrentPage;
                    endPage = currentPage + maxPagesAfterCurrentPage;
                }
            }
            // calculate start and end item indexes
            var startIndex = (currentPage - 1) * pageSize;
            var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);
            // create an array of pages to ng-repeat in the pager control
            var pages = Array.from(Array((endPage + 1) - startPage).keys()).map(function(i) {
                return startPage + i;
            });
            // return object with all pager properties required by the view
            return {
                totalItems: totalItems,
                currentPage: currentPage,
                pageSize: pageSize,
                totalPages: totalPages,
                startPage: startPage,
                endPage: endPage,
                startIndex: startIndex,
                endIndex: endIndex,
                pages: pages
            };
        }

    /*paginate() function code ends here*/

        //console.log(paginate(70, 1, 10, 5));
        function appendpaginationlinks(pagesLinks) {

            // console.log('pagesLinks', pagesLinks)
            const pages = pagesLinks.pages;
            const totalPages = pagesLinks.totalPages;
            const currentPage = pagesLinks.currentPage;
            // console.log(pages.length);
            if (pages.length > 1) {



                var pagehtml = "<div class=flex-inline>";
                pagehtml += "<ul class='pagination  relative z-0 inline-flex rounded-md shadow-sm -space-x-px'>";

                // if(currentPage>1){
                //   pagehtml+='<li><a href="#" class="page-btn relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 mr-3" data-id="1">First</a></li>';
                // }

                if (currentPage > 1) {
                    pagehtml += '<li><a href="#" class="page-btn relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 mr-3" data-id="1">First</a></li>';
                    pagehtml += '<li><a href="#" class="page-btn relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 mr-3" data-id=' + (currentPage - 1) + '><</a></li>';
                }

                pages.forEach((e) => {

                    var isActive = "";

                    if (e == currentPage) {
                        isActive = "active";
                    }
                    pagehtml += '<li><a href="#" class="' + isActive + ' page-btn relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 mr-3" data-id=' + e + '>' + e + '</a></li>';
                })

                if (totalPages !== currentPage) {
                    pagehtml += '<li><a href="#" class="page-btn relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 mr-3"  data-id=' + (currentPage + 1) + '>></a></li>';
                    pagehtml += '<li><a href="#" class="page-btn relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 mr-3" data-id=' + totalPages + '>Last</a></li>';
                }

                pagehtml += "</ul></div>";

            } else {
                pagehtml = "";
            }

            $(".contain-pagination").empty();
            $('.contain-pagination').append(pagehtml);
        }

        function renderPaginationLinks(pagesLinks, count = 0) {
            const currentPage = pagesLinks.currentPage;
            appendpaginationlinks(pagesLinks);

            setTimeout(() => {

                $(document).on('click', '.page-btn', function() {
                    const limit = 5;
                    const dataId = $(this).attr('data-id');

                    const newOffset = (limit * Number(dataId)) - (limit);
                    offset = newOffset;
                    // alert(offset);
                    if (offset !== currentPage) {
                        $('.press').empty();

                    }
                    getData(offset, false, "ce_caseStudiesOnClick");
                    const pagLinks = paginate(count, parseInt(dataId), limit, 2);

                    appendpaginationlinks(pagLinks);
                });

            }, 1000);

        }
        let offset = 0;

        function getData(offset, pagination = true, entitype) {
            const limit = 5;
            let request_url =
                api_url +
                "&limit=" +
                limit +
                "&offset=" +
                offset +
                "&entityTypes=" +
                entitype +
                '&sortBy=[{"name":"ASCENDING"}]';

            getRequest(request_url, pagination);

        }

        function getRequest(request_url, isPagingnation = false) {
            // console.log(request_url);
            fetch(request_url, {
                    method: "GET"
                })
                .then((res) => res.json())
                .then(function(data) {
                    let count = data.response.count;
                    const limit = 10;
                    var cat = data.response.entities;
                    var html = "";
                    cat.forEach((f, i) => {
                        // console.log(f); 
                        let varCount = f.count;
                        // console.log(varCount);
                        let onHoverPhoto = f.c_onHoverPhoto[0].url;
                        // console.log(onHoverPhoto);
                        let varName = f.name;
                        let varSlug = f.slug;
                        let onHoverImage = f.c_onHoverPhoto[0].url;
                        let mainImage = f.photoGallery[0].image.url;
                        let industryListing = f.c_industryListing;
                        let technologyListing = f.c_technologyListing;

                        html += '<p class="text-2xl font-bold">' + varName + '</P>';
                        html += '<div class="flex-wrap">\
                                                  <p class="text-2xl font-medium">Industry:</p>\
                                                  <p>' + industryListing + '</p></div>';
                        html += '<div class="flex-wrap">\
                                                  <p class="text-2xl font-medium">Technology:</p>\
                                                  <p>' + technologyListing + '</p></div>';
                        html += '<div class="entitiesListMainImageDiv ml-5 my-2.5">';
                        html += '<a href=' + varSlug + '><img src=' + mainImage + ' class="w-72"></a></div>';
                        html += '<img src=' + onHoverPhoto + ' class="w-36">';
                        html += '<a href=' + varSlug + '><button type="button" class="inline-block px-6 py-2 border-2 border-blue-600 text-blue-600 font-medium text-xs leading-tight uppercase rounded hover:bg-black hover:bg-opacity-5 focus:outline-none focus:ring-0 transition duration-150 ease-in-out">READ CASE STUDY</button></a>';



                    });

                    $('.entitiesListing').html(html);
                    var pagLinks = paginate(count, 1, limit, 2);
                    if (isPagingnation) {
                        renderPaginationLinks(pagLinks, count);
                    }


                })

                .catch((err) => {
                    alert("There was an error");
                    console.error(err);
                });
        }
        getData(0, true, "ce_caseStudiesOnClick");



    </script>
    <!-- Javascript code ends here -->

    <!-- Footer added here -->

        {{>footer}}

    <!-- Footer added here -->
    </body>
</html>